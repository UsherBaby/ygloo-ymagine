# Application name
#
# Project name of the application. This is used for String generation and other temporary 
# folders created for the application. This name wll also used as the package name appending 
# the default base configured in the build system.
appName=ymagine

# Locales
#
# List of locales supported by this release. The build system will collect any locale dependent
# content and process it to be used in the app. Missing content for one of the listed locales will
# make the process fail.
# Entries can contain a comma separated list of either languages (e.g. de,en,fr,it) or language
# region combination separated by a dash (e.g. de-DE,en-US,en-CA).
#
# You can also define a mapping from the locales delivered form YALA to the locales you want to use
# in the app. e.g. YALA only delivers de-DE, but you want the same strings for every device set to
# German. Your mapping entry would be "de-DE=de" there can be multiple entries separated by commas.
locales=en-US
#mapping=

# Default locale
#
# If the system is not set to a locale which does not match any of the listed locales in the entry
# above it will fall back to this locale. The one locale listed here MUST be in the list of 
# supported locales
defaultLocale=en-US

# Path to YApps project
#
# Relative path to the YApps project in your filesystem.
# Path is relative to the dir this file is in.
yappsPath=./../yapps

# Preprocessor symbols
#
# Symbols used to preprocess the code. We use them to build for different Android API levels and
# for different apps. Apps are defined via their APPID. Never change this if you are not exactly know
# what you are doing!
# Symbols used for that are named API_n where n is the number of the Android API level you want to build 
# for. The following API levels are supported:
#
# Android 2.1	7
# Android 2.0.1	6
# Android 2.0	5
# Android 1.6	4
#
# If you want to build for level 6 (2.0.1) you should include all API levels before also. Because the API
#
# levels are downward compatible. The property should look like this: API_4,API_5,API_6 
# The default API level right now is 4.
build.preprocessor.symbols=APPID='template',API_5

# Use SVN revision information for versioning
#
# If this property is set (note it does not have to be set to true, just to set it is enough) the build
# system will use the svn revision information of the working copy (your current checkout) to fill the
# android:versionCode property inside AndioidManifest.xml.
# If you want to use this feature you need some setup:
# 1.) Move your AndroidManifest.xml to AndroidManifiest.xml.template
# 2.) Set the value of versionCode to ###SVN_WC_REVISION###
# 3.) Remove AndroidManifest.xml from version control and add it to svn:ignore
#
# Please also remember to only make changes to your manifest in AndroidManifiest.xml.template from then on.
#
# Restrictions: This system will only work if your project and share resources are in the same SVN repository. 
# (share the same revision number name space). If this is not the case you should enable contactVersionCode. 
# If it is enabled the system will contact the share and project revision codes. So for share revsion 123 and
# project revision 4321 you will get 4321123 as the project build number. This will gurantee that the build number
# is still unique for changes in project or share and that it is always growing.
#
# If you are using SVN:externals you can also add the paths to them (relative to the base path) using the
# svnExternalPaths parameter (comma seperated). They are addressed for versioning in order they appear. The
# final version number will be concatenated of the app revision and the external revision. e.g. you have one
# external which itself has revison 1234 and your app has revison 4321 then the revision of the whole package
# would be 43211234. 
# This can be used to ensure correct versioning even when using externals.
#useSVNVersionCode=true
#concatVersionCode=false
#svnExternalPaths=

# Template for the User Agent in HTTP connections
#
# The template for the user agent string as it will be used for network connections inside of the client.
# Everything you put here need to have the exact same amout of %s which will be replaced by version and
# device information.
userAgent.template.regular=YahooMobileTemplate/%s (Android Template; %s) (%s; %s; %s; %s/%s)

# Data directory
#
# Set where data for this app will be stored. The folder will be created as a subfolder of a folder named
# "Yahoo!" on the extermal storage device (mostly SD-Card).
data.directory=template



